<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>brimstone's blog</title><link>/</link><description>Recent content on brimstone's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 17 Feb 2023 16:36:15 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Windows Mischief</title><link>/blog/windows-mischief/</link><pubDate>Fri, 17 Feb 2023 16:36:15 +0000</pubDate><guid>/blog/windows-mischief/</guid><description>Here are some of my ideas for hiding processes on a Windows system.
Registry Hijacks Subvert sticky keys Press F5 a bunch of times at an RDP login screen:
REG ADD &amp;#34;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&amp;#34; /t REG_SZ /v Debugger /d &amp;#34;C:\windows\system32\cmd.exe&amp;#34; /f Subvert utility manager Press Win+U at an RDP login screen:
REG ADD &amp;#34;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\utilman.exe&amp;#34; /t REG_SZ /v Debugger /d &amp;#34;C:\windows\system32\cmd.exe&amp;#34; /f Services Hide a service ref: https://www.</description></item><item><title>Machine Learning Research</title><link>/projects/machine-learning-research/</link><pubDate>Fri, 17 Feb 2023 16:16:23 +0000</pubDate><guid>/projects/machine-learning-research/</guid><description>How do Basically, all of the test cases need to be the same length (number of pixels, characters, etc) and have a normalized output (again same length, and stable index across possible inputs)
Example ways of normalizing test cases Random crop of a fixed size out of images Images placed randomly on a random noise buffer of the same size A byte array of ~1000 random characters, and the log line placed at a random offset Array of random assembly opcodes, with a disassembly of the function placed at a random offset Example ways to remove bias Shift the hue of the image Rotate the image Random placement on field of noise Tags?</description></item><item><title>Free Services</title><link>/projects/free-services/</link><pubDate>Fri, 17 Feb 2023 15:05:22 +0000</pubDate><guid>/projects/free-services/</guid><description>Uptime checking Fresh Ping Can tie in with zapier to send notifications over Pushbullet uptimerobot.com HetrixTools Checkly ping.gl Port Forwarding serveo.net uses ssh! ngrok uses custom binary portmap.io uses openvpn External IP http://ifconfig.io http://ifconfig.me https://ipinfo.io https://api.ipify.org/ https://jsonip.com (https://getjsonip.com/) IP Information, as JSON https://ip-api.com/json/$IP https://ipapi.co/$IP/json https://ipinfo.io/$IP Lists of Lists https://public-apis.io/ Https://free-for.dev https://startuptoolchain.com/#cloud Infrastructure-as-a-service https://paul.totterman.name/posts/free-clouds/ Accounting https://www.waveapps.com/pricing Database https://fauna.com/pricing firebase Serverless Functions _ref https://fauna.com/blog/comparison-faas-providers _
netlify functions vercel glitch.me Google Cloud Functions AWS Lambda render https://fly.</description></item><item><title>Vulnerable Windows Drivers</title><link>/projects/vulnerable-windows-drivers/</link><pubDate>Sun, 11 Apr 2021 00:00:00 +0000</pubDate><guid>/projects/vulnerable-windows-drivers/</guid><description>Drivers:
CVE-2008-3431 Virtualbox 1.6.0? VBoxDrv.sys CVE-2013-3956 Novel ncpl.sys, nicm.sys, nscm.sys CVE-2016-? Capcom https://github.com/tandasat/ExploitCapcom https://github.com/FuzzySecurity/Capcom-Rootkit/blob/master/Driver/Capcom.sys http://www.fuzzysecurity.com/tutorials/28.html Shenanigans:
modify g_CiEnabled to zero to disable driver signing enforcement References:
https://github.com/Ondrik8/exploit http://www.sekoia.fr/blog/windows-driver-signing-bypass-by-derusbi/ https://j00ru.vexillium.org/2010/06/insight-into-the-driver-signature-enforcement/ megathread: https://www.unknowncheats.me/forum/anti-cheat-bypass/334557-vulnerable-driver-megathread.html https://github.com/RedCursorSecurityConsulting/PPLKiller</description></item><item><title>Raspberry Pi aarch64</title><link>/projects/raspberry-pi-aarch64/</link><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid>/projects/raspberry-pi-aarch64/</guid><description>There&amp;rsquo;s now an official 64bit image, but it has a few issues still.
Official Image:
https://downloads.raspberrypi.org/raspios_arm64/images/raspios_arm64-2020-05-28/2020-05-27-raspios-buster-arm64.zip https://www.raspberrypi.org/forums/viewtopic.php?p=1668160 Pre-Official Image Notes The debian way works great on 3B+ systems, but leaves you with debian and not raspbian. The raspbian way leaves you with 32bit raspbian (there isn&amp;rsquo;t a 64bit raspbian), but running a 64bit kernel.
As close to official debian as one can get: https://salsa.debian.org/raspi-team/image-specs
Alpine modifications: https://raspberrypi.stackexchange.com/questions/100608/booting-alpine-linux-on-raspberry-pi-4
Old Raspbian way: https://www.</description></item><item><title>D1 mini</title><link>/projects/d1-mini/</link><pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate><guid>/projects/d1-mini/</guid><description>To flash micropython https://micropython.org/download#esp8266
might have to erase the flash first
esptool.py --port /dev/ttyUSB0 --baud 460800 erase_flash flash:
esptool.py --port /dev/ttyUSB0 --baud 460800 write_flash --flash_size=detect 0 esp8266*.bin transferring files pip install adafruit-ampy ampy --port=/dev/ttyUSB0 get /boot.py boot.py neopixels import machine, neopixel def test (i): np = neopixel.NeoPixel(machine.Pin(i), 8) np[0] = (255, 0, 0) np.write() http https://github.com/fadushin/esp8266/tree/master/micropython/uhttpd
wifi https://docs.micropython.org/en/latest/esp8266/quickref.html#networking
import network wlan = network.WLAN(network.STA_IF) # create station interface wlan.active(True) # activate the interface wlan.</description></item><item><title>Raspberry PI BTRFS root</title><link>/projects/raspberry-pi-btrfs-root/</link><pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate><guid>/projects/raspberry-pi-btrfs-root/</guid><description>Conversion Boot the pi at least once with a normal flash of raspbian From the pi: Add btrfs to /etc/initramfs-tools/modules Run update-initramfs -u -k $(uname -r) Append /boot/config.txt to include initramfs initrd.img-$(uname -r) followkernel Replace ext4 with btrfs in /etc/fstab and /boot/cmdline.txt From a different system: btrfs-convert -L /dev/sd From the pi: btrfs subvol delete /ext2_saved btrfs fi defrag -r / btrfs balance start / Script #!/bin/bash set -euo pipefail grep -q &amp;#34;btrfs&amp;#34; /etc/initramfs-tools/modules || echo btrfs &amp;gt;&amp;gt; /etc/initramfs-tools/modules update-initramfs -u -k $(uname -r) sed -i &amp;#39;/followkernel/d&amp;#39; /boot/config.</description></item><item><title>AdventOfCyber2</title><link>/projects/adventofcyber2/</link><pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate><guid>/projects/adventofcyber2/</guid><description>Advent Of Cyber This is a challege put on in December each year at https://tryhackme.com/room/adventofcyber2.
Day 1 Name of the cookie? Use Firefox&amp;rsquo;s Inspector to see the cookies on the network request.
Answer: auth
What format is the cookie? Just know this, I suppose?
Answer: hexadecimal
Having decoded the cookie, what format is the data stored in? Again, just familiarity with computers. The give away is the {&amp;quot;&amp;quot;: &amp;quot;&amp;quot;} format.</description></item><item><title>Raspberry Pi Optimizations and Tricks</title><link>/projects/raspberry-pi-optimizations-and-tricks/</link><pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate><guid>/projects/raspberry-pi-optimizations-and-tricks/</guid><description> https://github.com/azlux/log2ram https://piratebox.cc/raspberry_pi:mods https://smalldata.tech/blog/2019/07/12/setting-up-a-raspberry-pi-4-home-server https://haydenjames.io/raspberry-pi-performance-add-zram-kernel-parameters/ Current working plan:
echo &amp;#34; # default 3000 =&amp;gt; 30s , we use 5 minutes = 30000 vm.dirty_expire_centisecs = 30000 vm.vfs_cache_pressure=500 vm.swappiness=100 vm.dirty_background_ratio=1 vm.dirty_ratio=50 &amp;#34; &amp;gt; /etc/sysctl.d/50-sdcard.conf sudo apt install zram-tools sudo apt purge dphys-swapfile sudo sed -i &amp;#39;/^ALLOCATION=.*$/ALLOCATION=1024/&amp;#39; /etc/default/zramswap</description></item><item><title>Shellcode Research</title><link>/projects/shellcode-research/</link><pubDate>Thu, 07 May 2020 00:00:00 +0000</pubDate><guid>/projects/shellcode-research/</guid><description>Hello, world! global _start section .text _start: mov rax, 1 ; write( mov rdi, 1 ; STDOUT_FILENO, mov rsi, msg ; &amp;#34;Hello, world!\n&amp;#34;, mov rdx, msglen ; sizeof(&amp;#34;Hello, world!\n&amp;#34;) syscall ; ); mov rax, 60 ; exit( mov rdi, 0 ; EXIT_SUCCESS syscall ; ); section .rodata msg: db &amp;#34;Hello, world!&amp;#34;, 10 msglen: equ $ - msg $ nasm -f elf64 -o hello.o hello.asm $ ld -o hello hello.o $ .</description></item><item><title>Pwnagotchi</title><link>/projects/pwnagotchi/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>/projects/pwnagotchi/</guid><description>Releases https://github.com/evilsocket/pwnagotchi/releases
Snippets Get version python3 -c &amp;#34;import pwnagotchi as p; print(p.version)&amp;#34; Configure laptop for usb connection ifconfig usb0 10.0.0.1 netmask 255.255.255.0 pwnagotchi will be at 10.0.0.2.
Configure bluetooth tether On pwnagotchi:
sudo bluetoothctl pair &amp;lt;mac&amp;gt; trust &amp;lt;mac&amp;gt;</description></item><item><title>DOS-EFI thumbdrive</title><link>/projects/dos-efi-thumbdrive/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>/projects/dos-efi-thumbdrive/</guid><description>To install the bios bootloader: grub-install --force --removable --boot-directory=/mnt/usb/boot --target=i386-pc /dev/loop0 To install the EFI bootloader: grub-install --force --removable --boot-directory=/mnt/usb/ --target=x86_64-efi --efi-directory=/mnt/usb /dev/loop0 To test bios: kvm drive.img To test EFI: kvm -bios /usr/share/ovmf/OVMF.fd drive.img
https://github.com/aguslr/multibootusb/blob/master/mbusb.d/debian.d/live9-generic.cfg
https://www.pcsuggest.com/create-a-multiboot-usb-drive-with-grub-in-linux/</description></item><item><title>Github Graphql</title><link>/projects/github-graphql/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>/projects/github-graphql/</guid><description>Useful links:
https://developer.github.com/v4/explorer/ https://graphql.org/learn/queries/ Attempting to get the contents of the README.md file in each repo:
{ viewer { repositories(last: 3, isFork: false) { nodes { name description updatedAt url defaultBranchRef{ name } object(expression:&amp;#34;master:&amp;#34;){ ... on Tree{ entries{ name object { ... on Blob { text } } } } } } totalCount totalDiskUsage } } }</description></item><item><title>The Taste of the Day</title><link>/blog/the-taste-of-the-day/</link><pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate><guid>/blog/the-taste-of-the-day/</guid><description>My boss recommended I read The Taste of the Day to learn to let go of tasks.
Notes Doesn&amp;rsquo;t matter what system you use, just use it all of the time The Morning Scrub Evaluate every item into one of the following categories Today: must be done today Later: Not today, not never Never: The Evening Scrub Parking lot goes to Later Today items Why didn&amp;rsquo;t this get done? Not enough time?</description></item><item><title>Blog Post Automation</title><link>/blog/blog-post-automation/</link><pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate><guid>/blog/blog-post-automation/</guid><description>This blog post was created in Joplin and syndicated to this blog with elaborate shell scripts.</description></item><item><title>covfefe</title><link>/projects/covfefe/</link><pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate><guid>/projects/covfefe/</guid><description>This system was setup with a host only network on virtualbox 5.2.
Download from vulnhub or magnet
Enumeration First nmap showed ports 22, 80, and 31337 open:
root@sepha:/pentest# nmap -sS -A -n 192.168.56.101 Starting Nmap 7.70 ( https://nmap.org ) at 2018-04-06 20:19 UTC Nmap scan report for 192.168.56.101 Host is up (0.00066s latency). Not shown: 997 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.4p1 Debian 10 (protocol 2.</description></item><item><title>Mr. Robot</title><link>/projects/mr.-robot/</link><pubDate>Sat, 07 Apr 2018 00:00:00 +0000</pubDate><guid>/projects/mr.-robot/</guid><description>This system was setup with a host only network on virtualbox 5.2.
Download from vulnhub or magnet
Enumeration Started with nmap, basic settings:
# nmap -sS --script vuln 192.168.56.101 -A Starting Nmap 7.70 ( https://nmap.org ) at 2018-04-07 23:19 UTC Pre-scan script results: |_broadcast-avahi-dos: ERROR: Script execution failed (use -d to debug) Nmap scan report for 192.168.56.101 Host is up (0.00084s latency). Not shown: 997 filtered ports PORT STATE SERVICE VERSION 22/tcp closed ssh 80/tcp open http Apache httpd | http-csrf: | Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=192.</description></item><item><title>recon</title><link>/projects/recon/</link><pubDate>Sun, 21 Mar 2010 00:00:00 +0000</pubDate><guid>/projects/recon/</guid><description>This system was setup in a CTF with virtualbox 6.1.
Download from vulnhub or magnet
Services nmap shows port 80 is open and browsing port 80 with a web brower looks like wordpress is installed.
wpscan shows authors:
recon reconauthor Footholds wpwscan finds password:
Username: reconauthor, Password: football7 The usual tricks of altering theme files and uploading malicious php code don&amp;rsquo;t seem to work without effort.
After clicking around. There&amp;rsquo;s a vulnerable plugin: e-Learning.</description></item><item><title>VulnUni</title><link>/projects/vulnuni/</link><pubDate>Sun, 21 Mar 2010 00:00:00 +0000</pubDate><guid>/projects/vulnuni/</guid><description>This system was setup in a CTF with virtualbox 6.1.
Download from vulnhub or magnet
Services nmap shows that port 80 is open. I spidered the whole site with wget -r -np and found the following comments:
192.168.5.4/courses.html: &amp;lt;!-- Disabled till new version is installed --&amp;gt; 192.168.5.4/courses.html: &amp;lt;!-- &amp;lt;li class=&amp;#34;nav-item&amp;#34;&amp;gt;&amp;lt;a href=&amp;#34;vulnuni-eclass-platform.html&amp;#34; class=&amp;#34;nav-link&amp;#34;&amp;gt;EClass Platform&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; --&amp;gt; Footholds There&amp;rsquo;s a published exploit for this site on exploit-db: https://www.exploit-db.com/exploits/48106
Using the information in the exploit.</description></item></channel></rss>