<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rpi on brimstone's blog</title><link>/tags/rpi/</link><description>Recent content in rpi on brimstone's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/rpi/index.xml" rel="self" type="application/rss+xml"/><item><title>Raspberry Pi aarch64</title><link>/projects/raspberry-pi-aarch64/</link><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid>/projects/raspberry-pi-aarch64/</guid><description>There&amp;rsquo;s now an official 64bit image, but it has a few issues still.
Official Image:
https://downloads.raspberrypi.org/raspios_arm64/images/raspios_arm64-2020-05-28/2020-05-27-raspios-buster-arm64.zip https://www.raspberrypi.org/forums/viewtopic.php?p=1668160 Pre-Official Image Notes The debian way works great on 3B+ systems, but leaves you with debian and not raspbian. The raspbian way leaves you with 32bit raspbian (there isn&amp;rsquo;t a 64bit raspbian), but running a 64bit kernel.
As close to official debian as one can get: https://salsa.debian.org/raspi-team/image-specs
Alpine modifications: https://raspberrypi.stackexchange.com/questions/100608/booting-alpine-linux-on-raspberry-pi-4
Old Raspbian way: https://www.</description></item><item><title>Raspberry PI BTRFS root</title><link>/projects/raspberry-pi-btrfs-root/</link><pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate><guid>/projects/raspberry-pi-btrfs-root/</guid><description>Conversion Boot the pi at least once with a normal flash of raspbian From the pi: Add btrfs to /etc/initramfs-tools/modules Run update-initramfs -u -k $(uname -r) Append /boot/config.txt to include initramfs initrd.img-$(uname -r) followkernel Replace ext4 with btrfs in /etc/fstab and /boot/cmdline.txt From a different system: btrfs-convert -L /dev/sd From the pi: btrfs subvol delete /ext2_saved btrfs fi defrag -r / btrfs balance start / Script #!/bin/bash set -euo pipefail grep -q &amp;#34;btrfs&amp;#34; /etc/initramfs-tools/modules || echo btrfs &amp;gt;&amp;gt; /etc/initramfs-tools/modules update-initramfs -u -k $(uname -r) sed -i &amp;#39;/followkernel/d&amp;#39; /boot/config.</description></item><item><title>Raspberry Pi Optimizations and Tricks</title><link>/projects/raspberry-pi-optimizations-and-tricks/</link><pubDate>Wed, 26 Aug 2020 00:00:00 +0000</pubDate><guid>/projects/raspberry-pi-optimizations-and-tricks/</guid><description> https://github.com/azlux/log2ram https://piratebox.cc/raspberry_pi:mods https://smalldata.tech/blog/2019/07/12/setting-up-a-raspberry-pi-4-home-server https://haydenjames.io/raspberry-pi-performance-add-zram-kernel-parameters/ Current working plan:
echo &amp;#34; # default 3000 =&amp;gt; 30s , we use 5 minutes = 30000 vm.dirty_expire_centisecs = 30000 vm.vfs_cache_pressure=500 vm.swappiness=100 vm.dirty_background_ratio=1 vm.dirty_ratio=50 &amp;#34; &amp;gt; /etc/sysctl.d/50-sdcard.conf sudo apt install zram-tools sudo apt purge dphys-swapfile sudo sed -i &amp;#39;/^ALLOCATION=.*$/ALLOCATION=1024/&amp;#39; /etc/default/zramswap</description></item><item><title>Pwnagotchi</title><link>/projects/pwnagotchi/</link><pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate><guid>/projects/pwnagotchi/</guid><description>Releases https://github.com/evilsocket/pwnagotchi/releases
Snippets Get version python3 -c &amp;#34;import pwnagotchi as p; print(p.version)&amp;#34; Configure laptop for usb connection ifconfig usb0 10.0.0.1 netmask 255.255.255.0 pwnagotchi will be at 10.0.0.2.
Configure bluetooth tether On pwnagotchi:
sudo bluetoothctl pair &amp;lt;mac&amp;gt; trust &amp;lt;mac&amp;gt;</description></item></channel></rss>